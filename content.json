{"meta":{"title":"GoXpert.ru","subtitle":"GoXpert.ru для тех, кто хочет стать экспертом в GO разработке","description":"Секреты Golang. Архитектура и дизайн приложений на GO. Всё о GO изнутри","author":"авторы проекта GoXpert","url":"https://goxpert.ru","root":"/"},"pages":[{"title":"","date":"2021-11-27T21:16:20.121Z","updated":"2021-11-27T21:16:20.076Z","comments":true,"path":"search.html","permalink":"https://goxpert.ru/search.html","excerpt":"","text":"(function(w,d,c){var s=d.createElement('script'),h=d.getElementsByTagName('script')[0];s.type='text/javascript';s.async=true;s.charset='utf-8';s.src=(d.location.protocol==='https:'?'https:':'http:')+'//site.yandex.net/v2.0/js/all.js';h.parentNode.insertBefore(s,h);(w[c]||(w[c]=[])).push(function(){Ya.Site.Results.init();})})(window,document,'yandex_site_callbacks');"}],"posts":[{"title":"Пакеты","slug":"common/package","date":"2024-06-01T07:03:00.000Z","updated":"2024-06-01T12:29:15.393Z","comments":true,"path":"2024/06/01/common/package/","link":"","permalink":"https://goxpert.ru/2024/06/01/common/package/","excerpt":"","text":"Что такое пакет?В языке программирования Go, пакет (package) - это коллекция исходных файлов Go, которые находятся в одной и той же директории. Все файлы в одном пакете должны иметь одно и то же имя пакета в начале файла. Пакеты в Go используются для организации и повторного использования кода. Они представляют собой удобный способ разделения кода на отдельные модули. Это позволяет определить пакет с нужной функциональностью один раз и затем использовать его многократно в различных программах. В Go есть два типа пакетов: исполняемые (executable) и библиотеки (reusable). Исполняемые пакеты должны иметь имя main и содержать функцию main, которая является входной точкой в приложение. Все остальные пакеты являются библиотеками и не могут быть напрямую выполнены. Расскажи про папку internalВ Go, папка internal используется для хранения кода, который не должен быть доступен за пределами текущего модуля. Это означает, что любой код, который находится в папке internal (или в подпапках этой папки), может быть импортирован и использован только внутри того же модуля. Это полезно, когда вы хотите скрыть определенные части вашего кода от внешнего мира, чтобы предотвратить его неправильное использование. title123456test├─ go.mod├─ internal│ └─ handler│ └─ opkg.go├─ main.go","categories":[{"name":"Golang","slug":"Golang","permalink":"https://goxpert.ru/categories/Golang/"},{"name":"Старт","slug":"Golang/Старт","permalink":"https://goxpert.ru/categories/Golang/%D0%A1%D1%82%D0%B0%D1%80%D1%82/"},{"name":"Вопрос-Ответ","slug":"Вопрос-Ответ","permalink":"https://goxpert.ru/categories/%D0%92%D0%BE%D0%BF%D1%80%D0%BE%D1%81-%D0%9E%D1%82%D0%B2%D0%B5%D1%82/"}],"tags":[{"name":"Golang, Q&A","slug":"Golang-Q-A","permalink":"https://goxpert.ru/tags/Golang-Q-A/"}]},{"title":"Общие вопросы","slug":"overall-questions","date":"2024-06-01T07:02:00.000Z","updated":"2024-06-01T11:58:40.909Z","comments":true,"path":"2024/06/01/overall-questions/","link":"","permalink":"https://goxpert.ru/2024/06/01/overall-questions/","excerpt":"","text":"Какие технологические преимущества экосистемы Go вы можете назвать?В случае с экосистемой Go к потенциальным преимуществам можно отнести: Большое и активное сообщество разработчиков, которые вносят свой вклад в развитие языка Go и его экосистемы. Богатый набор библиотек и инструментов, облегчающих разработку, тестирование и развертывание приложений на Go. Совместимость с широким спектром платформ и систем, что делает его универсальным выбором для создания приложений. Сильная поддержка конкурентного и параллельного программирования, что позволяет повысить производительность и масштабируемость приложений. Упор на простоту и читабельность, что облегчает изучение и использование языка разработчиками и способствует развитию экосистемы. Go - императивный или декларативный? А в чем разница?Go - императивный язык программирования. Это означает, что в нем используются инструкции, которые описывают, как выполнять задачу. В декларативных языках программирования, например, SQL, описывается, что должно быть сделано, а не как это сделать. Какие особенности Go вы можете назвать? Статическая типизация Сборка мусора Конкурентность Параллелизм Отсутствие исключений Строгая типизация Строгая проверка ошибок Почему треды в Go - легковесныеВ Go горутины - это легковесные потоки, управляемые средой выполнения Go. Они более легковесны, чем потоки операционной системы, потому что занимают меньше места в памяти, обычно около 2 килобайт, по сравнению с памятью потока операционной системы, которая может составлять несколько мегабайт. Такой меньший объем памяти позволяет среде выполнения Go создавать большое количество горутин, часто тысячи или даже миллионы, не исчерпывая системных ресурсов. Кроме того, среда выполнения Go использует планировщик, чтобы мультиплексировать горутины на меньшее число потоков операционной системы, что позволяет снизить накладные расходы на создание и управление потоками. Планировщик также может выполнять контекстные переключения между горутинами без участия операционной системы, что может быть быстрее, чем полное контекстное переключение между потоками операционной системы. В целом, сочетание меньшего объема памяти и планировщика пользовательского пространства делает горутины легким и эффективным механизмом для параллельного выполнения в программах на Go. Какие средства обобщенного программирования есть в Go?В Go 1.18 появилась поддержка обобщенного программирования. Обобщенное программирование - это способность писать функции и типы, которые работают с любыми типами данных, а не только с конкретными типами данных. В Go 1.18 обобщенное программирование реализовано с помощью параметризованных типов и функций. Какие средства метапрограммирования есть в Go?В Go нет средств метапрограммирования, таких как макросы, шаблоны. Вместо этого Go предоставляет мощную систему интерфейсов, которая позволяет писать гибкий и расширяемый код, который может быть легко адаптирован к различным типам данных. Какая сортировка используется в Golang?В Go используется алгоритм сортировки “Quicksort”, который является эффективным алгоритмом сортировки с асимптотической сложностью O(n log n). Этот алгоритм используется в стандартной библиотеке “sort” для сортировки слайсов и пользовательских коллекций данных. Какая кодировка используется в Golang?Go поддерживает UTF-8 кодировку по умолчанию для всех строковых типов. Это означает, что вы можете безопасно использовать Unicode символы в строках в Go. Библиотека “unicode/utf8” предоставляет функции для работы с UTF-8 кодированными строками. Можно ли в Golang создать статический метод?В Go нет классов и, следовательно, нет статических методов в традиционном понимании этого термина, как в языках, таких как Java или C++. Однако, вы можете создать функции, которые привязаны к определенному типу данных, что близко к понятию статического метода. Вот пример: 1234567type MyType struct &#123; value int&#125;func (t MyType) StaticMethod() int &#123; return t.value * 2&#125; В этом примере StaticMethod является функцией, которая привязана к типу MyType. Вы можете вызвать эту функцию на экземпляре MyType. 12t := MyType&#123;value: 5&#125;result := t.StaticMethod() // result is 10 Это не совсем то же самое, что статический метод в языках с классами, но это ближайший аналог в Go.","categories":[{"name":"Golang","slug":"Golang","permalink":"https://goxpert.ru/categories/Golang/"},{"name":"Старт","slug":"Golang/Старт","permalink":"https://goxpert.ru/categories/Golang/%D0%A1%D1%82%D0%B0%D1%80%D1%82/"},{"name":"Вопрос-Ответ","slug":"Вопрос-Ответ","permalink":"https://goxpert.ru/categories/%D0%92%D0%BE%D0%BF%D1%80%D0%BE%D1%81-%D0%9E%D1%82%D0%B2%D0%B5%D1%82/"}],"tags":[{"name":"Golang, Q&A","slug":"Golang-Q-A","permalink":"https://goxpert.ru/tags/Golang-Q-A/"}]},{"title":"С 1 Июня 2024!","slug":"helloworld","date":"2024-06-01T07:00:00.000Z","updated":"2024-06-01T08:55:15.393Z","comments":true,"path":"2024/06/01/helloworld/","link":"","permalink":"https://goxpert.ru/2024/06/01/helloworld/","excerpt":"","text":"Добрый день! Сегодня родился сайт GoXpert. Для чего нужен этот сайт: Во-первых, для меня. Да, меня зовут Дмитрий Сигаев. Это сайт, на мой взгляд, поможет мне структурировать свои знания в разных областях, но в основном в экосистеме GO. Я много, что умею, но не могу в нужный для меня момент вынуть из своей головы нужной информации. Данный сайт — это так называемое хранилище моего опыта и якорей для быстрой настройки кратковременной памяти :) Во-вторых, если это полезно для меня, то, на мой взгляд, найдется тот, кому это сайт тоже поможет в чем-то разобраться… В-третьих, хочу выразить благодарность Сергею Артамонову. Спасибо за второй шанс и последствие в виде данного сайта. Надеюсь, быть его падаваном и соавтором публикаций на данном сайта. Ладно, не будем терять времени… поехали… Let’s GO!","categories":[{"name":"Golang","slug":"Golang","permalink":"https://goxpert.ru/categories/Golang/"},{"name":"Старт","slug":"Golang/Старт","permalink":"https://goxpert.ru/categories/Golang/%D0%A1%D1%82%D0%B0%D1%80%D1%82/"}],"tags":[{"name":"Golang","slug":"Golang","permalink":"https://goxpert.ru/tags/Golang/"}]}],"categories":[{"name":"Golang","slug":"Golang","permalink":"https://goxpert.ru/categories/Golang/"},{"name":"Старт","slug":"Golang/Старт","permalink":"https://goxpert.ru/categories/Golang/%D0%A1%D1%82%D0%B0%D1%80%D1%82/"},{"name":"Вопрос-Ответ","slug":"Вопрос-Ответ","permalink":"https://goxpert.ru/categories/%D0%92%D0%BE%D0%BF%D1%80%D0%BE%D1%81-%D0%9E%D1%82%D0%B2%D0%B5%D1%82/"}],"tags":[{"name":"Golang, Q&A","slug":"Golang-Q-A","permalink":"https://goxpert.ru/tags/Golang-Q-A/"},{"name":"Golang","slug":"Golang","permalink":"https://goxpert.ru/tags/Golang/"}]}